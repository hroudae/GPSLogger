ARM GAS  /tmp/ccIO7JLE.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.configLED,"ax",%progbits
  16              		.align	1
  17              		.global	configLED
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	configLED:
  25              	.LVL0:
  26              	.LFB41:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** 
  26:Src/main.c    **** #define redLED 6
  27:Src/main.c    **** #define blueLED 7
  28:Src/main.c    **** #define orangeLED 8
  29:Src/main.c    **** #define greenLED 9
  30:Src/main.c    **** 
  31:Src/main.c    **** 
ARM GAS  /tmp/ccIO7JLE.s 			page 2


  32:Src/main.c    **** void SystemClock_Config(void);
  33:Src/main.c    **** 
  34:Src/main.c    **** void configLED(uint8_t x);
  35:Src/main.c    **** void toggleLED(uint8_t x);
  36:Src/main.c    **** 
  37:Src/main.c    **** /**
  38:Src/main.c    ****   * @brief  The application entry point.
  39:Src/main.c    ****   * @retval int
  40:Src/main.c    ****   */
  41:Src/main.c    **** int main(void) {
  42:Src/main.c    ****   HAL_Init();
  43:Src/main.c    ****   SystemClock_Config();
  44:Src/main.c    ****   MX_FATFS_Init();
  45:Src/main.c    **** 
  46:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN; // Enable GPIOC clock in RCC for LEDS
  47:Src/main.c    **** 
  48:Src/main.c    ****   configLED(redLED); 
  49:Src/main.c    **** 	configLED(blueLED);
  50:Src/main.c    **** 
  51:Src/main.c    ****   GPIOC->BSRR = (1 << redLED); // Start high
  52:Src/main.c    **** 	GPIOC->BRR = (1 << blueLED); // Start low
  53:Src/main.c    **** 
  54:Src/main.c    ****   while (1) {
  55:Src/main.c    ****     //LEDs toggle every 200ms
  56:Src/main.c    **** 		HAL_Delay(200); // Delay 200ms
  57:Src/main.c    **** 	
  58:Src/main.c    **** 		// Toggle the output state
  59:Src/main.c    **** 		toggleLED(redLED);
  60:Src/main.c    **** 		toggleLED(blueLED);
  61:Src/main.c    ****   }
  62:Src/main.c    **** }
  63:Src/main.c    **** 
  64:Src/main.c    **** /*
  65:Src/main.c    ****  * Generic LED configuration function
  66:Src/main.c    ****  * Pass in the pin number, x, of the LED on PCx
  67:Src/main.c    ****  * Configures pin to general-pupose output mode, push-pull output,
  68:Src/main.c    ****  * low-speed, and no pull-up/down resistors
  69:Src/main.c    ****  */
  70:Src/main.c    **** void configLED(uint8_t x) {
  28              		.loc 1 70 27 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 70 27 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  71:Src/main.c    **** 	// Set General Pupose Output
  72:Src/main.c    **** 	GPIOC->MODER |= (1 << (2*x));
  40              		.loc 1 72 2 is_stmt 1 view .LVU2
  41              		.loc 1 72 15 is_stmt 0 view .LVU3
  42 0002 0D4B     		ldr	r3, .L2
  43 0004 1D68     		ldr	r5, [r3]
ARM GAS  /tmp/ccIO7JLE.s 			page 3


  44              		.loc 1 72 26 view .LVU4
  45 0006 4400     		lsls	r4, r0, #1
  46              		.loc 1 72 21 view .LVU5
  47 0008 0121     		movs	r1, #1
  48 000a 0A00     		movs	r2, r1
  49 000c A240     		lsls	r2, r2, r4
  50              		.loc 1 72 15 view .LVU6
  51 000e 1543     		orrs	r5, r2
  52 0010 1D60     		str	r5, [r3]
  73:Src/main.c    **** 	GPIOC->MODER &= ~(1 << ((2*x)+1));
  53              		.loc 1 73 2 is_stmt 1 view .LVU7
  54              		.loc 1 73 15 is_stmt 0 view .LVU8
  55 0012 1D68     		ldr	r5, [r3]
  56              		.loc 1 73 31 view .LVU9
  57 0014 0134     		adds	r4, r4, #1
  58              		.loc 1 73 22 view .LVU10
  59 0016 0E00     		movs	r6, r1
  60 0018 A640     		lsls	r6, r6, r4
  61              		.loc 1 73 15 view .LVU11
  62 001a B543     		bics	r5, r6
  63 001c 1D60     		str	r5, [r3]
  74:Src/main.c    **** 	// Set to Push-pull
  75:Src/main.c    **** 	GPIOC->OTYPER &= ~(1 << x);
  64              		.loc 1 75 2 is_stmt 1 view .LVU12
  65              		.loc 1 75 16 is_stmt 0 view .LVU13
  66 001e 5C68     		ldr	r4, [r3, #4]
  67              		.loc 1 75 23 view .LVU14
  68 0020 8140     		lsls	r1, r1, r0
  69              		.loc 1 75 16 view .LVU15
  70 0022 8C43     		bics	r4, r1
  71 0024 5C60     		str	r4, [r3, #4]
  76:Src/main.c    **** 	// Set to Low speed
  77:Src/main.c    **** 	GPIOC->OSPEEDR &= ~((1 << (2*x)) | (1 << ((2*x)+1)));
  72              		.loc 1 77 2 is_stmt 1 view .LVU16
  73              		.loc 1 77 17 is_stmt 0 view .LVU17
  74 0026 9968     		ldr	r1, [r3, #8]
  75              		.loc 1 77 35 view .LVU18
  76 0028 3243     		orrs	r2, r6
  77              		.loc 1 77 17 view .LVU19
  78 002a 9143     		bics	r1, r2
  79 002c 9960     		str	r1, [r3, #8]
  78:Src/main.c    **** 	// Set to no pull-up/down
  79:Src/main.c    **** 	GPIOC->PUPDR &= ~((1 << (2*x)) | (1 << ((2*x)+1)));
  80              		.loc 1 79 2 is_stmt 1 view .LVU20
  81              		.loc 1 79 15 is_stmt 0 view .LVU21
  82 002e D968     		ldr	r1, [r3, #12]
  83 0030 9143     		bics	r1, r2
  84 0032 D960     		str	r1, [r3, #12]
  80:Src/main.c    **** }
  85              		.loc 1 80 1 view .LVU22
  86              		@ sp needed
  87 0034 70BD     		pop	{r4, r5, r6, pc}
  88              	.L3:
  89 0036 C046     		.align	2
  90              	.L2:
  91 0038 00080048 		.word	1207961600
  92              		.cfi_endproc
ARM GAS  /tmp/ccIO7JLE.s 			page 4


  93              	.LFE41:
  95              		.section	.text.toggleLED,"ax",%progbits
  96              		.align	1
  97              		.global	toggleLED
  98              		.syntax unified
  99              		.code	16
 100              		.thumb_func
 101              		.fpu softvfp
 103              	toggleLED:
 104              	.LVL1:
 105              	.LFB42:
  81:Src/main.c    **** 
  82:Src/main.c    **** /*
  83:Src/main.c    ****  * Toogle LED at PCx
  84:Src/main.c    ****  */
  85:Src/main.c    **** void toggleLED(uint8_t x) {
 106              		.loc 1 85 27 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
  86:Src/main.c    **** 	if (GPIOC->ODR & (1 << x)) // PCx is high
 111              		.loc 1 86 2 view .LVU24
 112              		.loc 1 86 11 is_stmt 0 view .LVU25
 113 0000 054B     		ldr	r3, .L7
 114 0002 5A69     		ldr	r2, [r3, #20]
 115              		.loc 1 86 22 view .LVU26
 116 0004 0123     		movs	r3, #1
 117 0006 8340     		lsls	r3, r3, r0
 118              		.loc 1 86 5 view .LVU27
 119 0008 1342     		tst	r3, r2
 120 000a 02D0     		beq	.L5
  87:Src/main.c    **** 			GPIOC->BRR = (1 << x);
 121              		.loc 1 87 4 is_stmt 1 view .LVU28
 122              		.loc 1 87 15 is_stmt 0 view .LVU29
 123 000c 024A     		ldr	r2, .L7
 124 000e 9362     		str	r3, [r2, #40]
 125              	.L4:
  88:Src/main.c    **** 		else	// PCx is low
  89:Src/main.c    **** 			GPIOC->BSRR = (1 << x);
  90:Src/main.c    **** }
 126              		.loc 1 90 1 view .LVU30
 127              		@ sp needed
 128 0010 7047     		bx	lr
 129              	.L5:
  89:Src/main.c    **** }
 130              		.loc 1 89 4 is_stmt 1 view .LVU31
  89:Src/main.c    **** }
 131              		.loc 1 89 16 is_stmt 0 view .LVU32
 132 0012 014A     		ldr	r2, .L7
 133 0014 9361     		str	r3, [r2, #24]
 134              		.loc 1 90 1 view .LVU33
 135 0016 FBE7     		b	.L4
 136              	.L8:
 137              		.align	2
 138              	.L7:
 139 0018 00080048 		.word	1207961600
ARM GAS  /tmp/ccIO7JLE.s 			page 5


 140              		.cfi_endproc
 141              	.LFE42:
 143              		.section	.text.SystemClock_Config,"ax",%progbits
 144              		.align	1
 145              		.global	SystemClock_Config
 146              		.syntax unified
 147              		.code	16
 148              		.thumb_func
 149              		.fpu softvfp
 151              	SystemClock_Config:
 152              	.LFB43:
  91:Src/main.c    **** 
  92:Src/main.c    **** 
  93:Src/main.c    **** /**
  94:Src/main.c    ****   * @brief System Clock Configuration
  95:Src/main.c    ****   * @retval None
  96:Src/main.c    ****   */
  97:Src/main.c    **** void SystemClock_Config(void)
  98:Src/main.c    **** {
 153              		.loc 1 98 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 72
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0002 92B0     		sub	sp, sp, #72
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 80
  99:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165              		.loc 1 99 3 view .LVU35
 166              		.loc 1 99 22 is_stmt 0 view .LVU36
 167 0004 3022     		movs	r2, #48
 168 0006 0021     		movs	r1, #0
 169 0008 06A8     		add	r0, sp, #24
 170 000a FFF7FEFF 		bl	memset
 171              	.LVL2:
 100:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 172              		.loc 1 100 3 is_stmt 1 view .LVU37
 173              		.loc 1 100 22 is_stmt 0 view .LVU38
 174 000e 1022     		movs	r2, #16
 175 0010 0021     		movs	r1, #0
 176 0012 01A8     		add	r0, sp, #4
 177 0014 FFF7FEFF 		bl	memset
 178              	.LVL3:
 101:Src/main.c    **** 
 102:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 103:Src/main.c    ****   */
 104:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 179              		.loc 1 104 3 is_stmt 1 view .LVU39
 180              		.loc 1 104 36 is_stmt 0 view .LVU40
 181 0018 0223     		movs	r3, #2
 182 001a 0593     		str	r3, [sp, #20]
 105:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 183              		.loc 1 105 3 is_stmt 1 view .LVU41
ARM GAS  /tmp/ccIO7JLE.s 			page 6


 184              		.loc 1 105 30 is_stmt 0 view .LVU42
 185 001c 013B     		subs	r3, r3, #1
 186 001e 0893     		str	r3, [sp, #32]
 106:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 187              		.loc 1 106 3 is_stmt 1 view .LVU43
 188              		.loc 1 106 41 is_stmt 0 view .LVU44
 189 0020 0F33     		adds	r3, r3, #15
 190 0022 0993     		str	r3, [sp, #36]
 107:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 191              		.loc 1 107 3 is_stmt 1 view .LVU45
 192              		.loc 1 107 34 is_stmt 0 view .LVU46
 193 0024 0024     		movs	r4, #0
 108:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194              		.loc 1 108 3 is_stmt 1 view .LVU47
 195              		.loc 1 108 7 is_stmt 0 view .LVU48
 196 0026 05A8     		add	r0, sp, #20
 197 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 198              	.LVL4:
 109:Src/main.c    ****   {
 110:Src/main.c    ****     Error_Handler();
 111:Src/main.c    ****   }
 112:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 113:Src/main.c    ****   */
 114:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199              		.loc 1 114 3 is_stmt 1 view .LVU49
 200              		.loc 1 114 31 is_stmt 0 view .LVU50
 201 002c 0723     		movs	r3, #7
 202 002e 0193     		str	r3, [sp, #4]
 115:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 116:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 203              		.loc 1 116 3 is_stmt 1 view .LVU51
 204              		.loc 1 116 34 is_stmt 0 view .LVU52
 205 0030 0294     		str	r4, [sp, #8]
 117:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 206              		.loc 1 117 3 is_stmt 1 view .LVU53
 207              		.loc 1 117 35 is_stmt 0 view .LVU54
 208 0032 0394     		str	r4, [sp, #12]
 118:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 209              		.loc 1 118 3 is_stmt 1 view .LVU55
 210              		.loc 1 118 36 is_stmt 0 view .LVU56
 211 0034 0494     		str	r4, [sp, #16]
 119:Src/main.c    **** 
 120:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 212              		.loc 1 120 3 is_stmt 1 view .LVU57
 213              		.loc 1 120 7 is_stmt 0 view .LVU58
 214 0036 0021     		movs	r1, #0
 215 0038 01A8     		add	r0, sp, #4
 216 003a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 217              	.LVL5:
 121:Src/main.c    ****   {
 122:Src/main.c    ****     Error_Handler();
 123:Src/main.c    ****   }
 124:Src/main.c    **** }
 218              		.loc 1 124 1 view .LVU59
 219 003e 12B0     		add	sp, sp, #72
 220              		@ sp needed
 221 0040 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccIO7JLE.s 			page 7


 222              		.cfi_endproc
 223              	.LFE43:
 225              		.section	.text.main,"ax",%progbits
 226              		.align	1
 227              		.global	main
 228              		.syntax unified
 229              		.code	16
 230              		.thumb_func
 231              		.fpu softvfp
 233              	main:
 234              	.LFB40:
  41:Src/main.c    ****   HAL_Init();
 235              		.loc 1 41 16 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ Volatile: function does not return.
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
  42:Src/main.c    ****   SystemClock_Config();
 245              		.loc 1 42 3 view .LVU61
 246 0002 FFF7FEFF 		bl	HAL_Init
 247              	.LVL6:
  43:Src/main.c    ****   MX_FATFS_Init();
 248              		.loc 1 43 3 view .LVU62
 249 0006 FFF7FEFF 		bl	SystemClock_Config
 250              	.LVL7:
  44:Src/main.c    **** 
 251              		.loc 1 44 3 view .LVU63
 252 000a FFF7FEFF 		bl	MX_FATFS_Init
 253              	.LVL8:
  46:Src/main.c    **** 
 254              		.loc 1 46 3 view .LVU64
  46:Src/main.c    **** 
 255              		.loc 1 46 15 is_stmt 0 view .LVU65
 256 000e 0D4A     		ldr	r2, .L12
 257 0010 5169     		ldr	r1, [r2, #20]
 258 0012 8023     		movs	r3, #128
 259 0014 1B03     		lsls	r3, r3, #12
 260 0016 0B43     		orrs	r3, r1
 261 0018 5361     		str	r3, [r2, #20]
  48:Src/main.c    **** 	configLED(blueLED);
 262              		.loc 1 48 3 is_stmt 1 view .LVU66
 263 001a 0620     		movs	r0, #6
 264 001c FFF7FEFF 		bl	configLED
 265              	.LVL9:
  49:Src/main.c    **** 
 266              		.loc 1 49 2 view .LVU67
 267 0020 0720     		movs	r0, #7
 268 0022 FFF7FEFF 		bl	configLED
 269              	.LVL10:
  51:Src/main.c    **** 	GPIOC->BRR = (1 << blueLED); // Start low
 270              		.loc 1 51 3 view .LVU68
  51:Src/main.c    **** 	GPIOC->BRR = (1 << blueLED); // Start low
ARM GAS  /tmp/ccIO7JLE.s 			page 8


 271              		.loc 1 51 15 is_stmt 0 view .LVU69
 272 0026 084B     		ldr	r3, .L12+4
 273 0028 4022     		movs	r2, #64
 274 002a 9A61     		str	r2, [r3, #24]
  52:Src/main.c    **** 
 275              		.loc 1 52 2 is_stmt 1 view .LVU70
  52:Src/main.c    **** 
 276              		.loc 1 52 13 is_stmt 0 view .LVU71
 277 002c 4032     		adds	r2, r2, #64
 278 002e 9A62     		str	r2, [r3, #40]
 279              	.L11:
  54:Src/main.c    ****     //LEDs toggle every 200ms
 280              		.loc 1 54 3 is_stmt 1 discriminator 1 view .LVU72
  56:Src/main.c    **** 	
 281              		.loc 1 56 3 discriminator 1 view .LVU73
 282 0030 C820     		movs	r0, #200
 283 0032 FFF7FEFF 		bl	HAL_Delay
 284              	.LVL11:
  59:Src/main.c    **** 		toggleLED(blueLED);
 285              		.loc 1 59 3 discriminator 1 view .LVU74
 286 0036 0620     		movs	r0, #6
 287 0038 FFF7FEFF 		bl	toggleLED
 288              	.LVL12:
  60:Src/main.c    ****   }
 289              		.loc 1 60 3 discriminator 1 view .LVU75
 290 003c 0720     		movs	r0, #7
 291 003e FFF7FEFF 		bl	toggleLED
 292              	.LVL13:
  54:Src/main.c    ****     //LEDs toggle every 200ms
 293              		.loc 1 54 9 discriminator 1 view .LVU76
 294 0042 F5E7     		b	.L11
 295              	.L13:
 296              		.align	2
 297              	.L12:
 298 0044 00100240 		.word	1073876992
 299 0048 00080048 		.word	1207961600
 300              		.cfi_endproc
 301              	.LFE40:
 303              		.section	.text.Error_Handler,"ax",%progbits
 304              		.align	1
 305              		.global	Error_Handler
 306              		.syntax unified
 307              		.code	16
 308              		.thumb_func
 309              		.fpu softvfp
 311              	Error_Handler:
 312              	.LFB44:
 125:Src/main.c    **** 
 126:Src/main.c    **** /* USER CODE BEGIN 4 */
 127:Src/main.c    **** 
 128:Src/main.c    **** /* USER CODE END 4 */
 129:Src/main.c    **** 
 130:Src/main.c    **** /**
 131:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 132:Src/main.c    ****   * @retval None
 133:Src/main.c    ****   */
 134:Src/main.c    **** void Error_Handler(void)
ARM GAS  /tmp/ccIO7JLE.s 			page 9


 135:Src/main.c    **** {
 313              		.loc 1 135 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 136:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 137:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 140:Src/main.c    **** }
 318              		.loc 1 140 1 view .LVU78
 319              		@ sp needed
 320 0000 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE44:
 324              		.text
 325              	.Letext0:
 326              		.file 2 "/home/ehrouda/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_ty
 327              		.file 3 "/home/ehrouda/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 328              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 329              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 330              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 331              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 332              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 333              		.file 9 "Middlewares/Third_Party/FatFs/src/integer.h"
 334              		.file 10 "Middlewares/Third_Party/FatFs/src/ff.h"
 335              		.file 11 "Middlewares/Third_Party/FatFs/src/diskio.h"
 336              		.file 12 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 337              		.file 13 "Inc/user_diskio.h"
 338              		.file 14 "Inc/fatfs.h"
 339              		.file 15 "<built-in>"
ARM GAS  /tmp/ccIO7JLE.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIO7JLE.s:16     .text.configLED:0000000000000000 $t
     /tmp/ccIO7JLE.s:24     .text.configLED:0000000000000000 configLED
     /tmp/ccIO7JLE.s:91     .text.configLED:0000000000000038 $d
     /tmp/ccIO7JLE.s:96     .text.toggleLED:0000000000000000 $t
     /tmp/ccIO7JLE.s:103    .text.toggleLED:0000000000000000 toggleLED
     /tmp/ccIO7JLE.s:139    .text.toggleLED:0000000000000018 $d
     /tmp/ccIO7JLE.s:144    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccIO7JLE.s:151    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccIO7JLE.s:226    .text.main:0000000000000000 $t
     /tmp/ccIO7JLE.s:233    .text.main:0000000000000000 main
     /tmp/ccIO7JLE.s:298    .text.main:0000000000000044 $d
     /tmp/ccIO7JLE.s:304    .text.Error_Handler:0000000000000000 $t
     /tmp/ccIO7JLE.s:311    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_FATFS_Init
HAL_Delay
